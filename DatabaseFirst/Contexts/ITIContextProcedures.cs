// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using DatabaseFirst.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DatabaseFirst.Contexts
{
    public partial class ITIContext
    {
        private IITIContextProcedures _procedures;

        public virtual IITIContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new ITIContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IITIContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class ITIContextProcedures : IITIContextProcedures
    {
        private readonly ITIContext _context;

        public ITIContextProcedures(ITIContext context)
        {
            _context = context;
        }

        public virtual async Task<int> Sp_AssignStud2CourAsync(int? stId, int? crsId, int? grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "StId",
                    Value = stId ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "CrsId",
                    Value = crsId ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "Grade",
                    Value = grade ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[Sp_AssignStud2Cour] @StId = @StId, @CrsId = @CrsId, @Grade = @Grade", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
